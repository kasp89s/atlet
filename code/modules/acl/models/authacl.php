<?php/** * Модель данных. ACL. Права доступа * */class AuthACL_Model extends Model  {	/**	 * Добавить действие/действия $action_id для пользователя $user_id	 *	 * @param int $user_id	 * @param int(array) $action_id	 */	public function add_user_action($user_id = FALSE, $actions = FALSE){		if(!$user_id || !$actions)			return FALSE;		if(!is_array($actions))			return FALSE;		foreach ($actions as $k=>$v){			if(empty($v)) continue;			$this->db->insert('auth_users_actions', array(				'user_id'   => $user_id,				'action_id' => $k,				'access'    => $v			));		}	}	/**	 * Очистить список действий пользователя $user_id	 *	 * @param int $user_id	 */	public function clear_user_action($user_id = FALSE){		if(!$user_id) return FALSE;		$this->db->delete('auth_users_actions', array('user_id' => $user_id));	}	/**	 * Получить все действия пользователя $id	 *	 * @param int $id	 * @return array	 */	public function get_user_actions($id = FALSE){		if(!$id) return FALSE;		return $this->db			->select(Array('self.id', 'self.code', 'access' => 'auth_users_actions.access'))			->from(Array('ml_self' => 'auth_actions'))			->inner_join('auth_users_actions', 'auth_users_actions.action_id', 'self.id')			->where('auth_users_actions.user_id', $id)			->get()			->rows();	}	/**	 * Добавить действие/действия $action_id для роли $role_id	 *	 * @param int $role_id	 * @param int(array) $action_id	 */	public function add_role_action($role_id = FALSE, $action_id = FALSE){		if(!$role_id || !$action_id)			return FALSE;		if(is_array($action_id)) {			foreach ($action_id as $v){				$this->db->insert('auth_roles_actions', array(					'role_id'   => $role_id,					'action_id' => $v				))->get();			}		} else {			$this->db->insert('auth_roles_actions', array(				'role_id'   => $role_id,				'action_id' => $action_id			))->get();		}	}	/**	 * Очистить список действий роли $role_id	 *	 * @param int $role_id	 */	public function clear_role_action($role_id = FALSE){		if(!$role_id) return FALSE;		$this->db->delete('auth_roles_actions', array('role_id' => $role_id))->get();	}	/**	 * Получить все действия роли $id	 *	 * @param int $id	 * @return array	 */	public function get_role_actions($id = FALSE){		if(!$id) return FALSE;		if(is_array($id))			return $this->db				->select('self.id', 'self.code')				->from(Array('ml_self' => 'auth_actions'))				->inner_join('auth_roles_actions', 'auth_roles_actions.action_id', 'self.id')				->where('auth_roles_actions.role_id', 'in', $id)				->get()				->rows();		else			return $this->db				->select('self.id', 'self.code')				->from(Array('ml_self' => 'auth_actions'))				->inner_join('auth_roles_actions', 'auth_roles_actions.action_id', 'self.id')				->where('auth_roles_actions.role_id', $id)				->get()				->rows();	}}